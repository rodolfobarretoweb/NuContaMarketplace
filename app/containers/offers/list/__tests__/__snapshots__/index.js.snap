// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`List container renders snapshot correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#782698",
        "paddingBottom": 20,
        "paddingHorizontal": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#fff",
          "fontSize": 25,
          "textAlign": "center",
        }
      }
    />
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    contentContainerStyle={
      Object {
        "padding": 10,
      }
    }
    data={
      Array [
        Object {
          "id": "id",
          "price": 10,
          "product": Object {
            "description": "Description",
            "image": "image.jpg",
            "name": "Product name",
          },
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={20}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Object {
                "backgroundColor": "#fff",
                "elevation": 3,
                "marginBottom": 10,
                "padding": 15,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 0.1,
                  "width": 1,
                },
                "shadowOpacity": 0.3,
              },
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View>
            <Image
              source={
                Object {
                  "uri": "image.jpg",
                }
              }
              style={
                Object {
                  "height": 150,
                  "marginBottom": 10,
                  "resizeMode": "cover",
                  "width": "100%",
                }
              }
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333",
                  "fontSize": 20,
                  "marginBottom": 5,
                }
              }
            >
              Product name
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#782698",
                  "fontSize": 16,
                  "fontWeight": "bold",
                  "marginBottom": 10,
                }
              }
            >
              $
              10
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333",
                  "fontSize": 14,
                }
              }
            >
              Description
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`List container renders snapshot correctly when is loading 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#782698",
        "paddingBottom": 20,
        "paddingHorizontal": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#fff",
          "fontSize": 25,
          "textAlign": "center",
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "justifyContent": "center",
          },
          Object {},
        ]
      }
    >
      <ActivityIndicator
        animating={true}
        color="#782698"
        hidesWhenStopped={true}
        size="large"
        style={
          Object {
            "borderRadius": 30,
            "height": 60,
            "width": 60,
          }
        }
      />
    </View>
  </View>
</View>
`;
